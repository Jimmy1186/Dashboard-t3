// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @db.Char(6)
  username String    @unique @db.VarChar(20)
  password String
  role     Role      @relation(fields: [roleId], references: [id], onDelete: Cascade)
  roleId   Int
  charges  Charge[]
  history  History[]
}

model Role {
  id    Int    @id @default(autoincrement())
  roles String @db.Char(1)
  user  User[]

  @@unique([roles])
}

model Company {
  id           Int           @id @default(autoincrement())
  c_name       String?       @unique @db.VarChar(20)
  c_title      String        @unique @db.VarChar(40)
  c_tax        String?       @unique @db.Char(8)
  ComparyTypes CompanyType[]

  @@unique([c_name, c_title, c_tax])
}

model Installment {
  id      Int     @id @default(autoincrement())
  percent Int
  ok      Boolean
  task    Task?   @relation(fields: [taskId], references: [id], onDelete: Cascade)
  taskId  String?
}

model Locations {
  id            Int    @id @default(autoincrement())
  location_name String @unique @db.VarChar(10)
  task          Task[]
}

model CompanyType {
  id         Int      @id @default(autoincrement())
  c_Type     String
  amount     Decimal  @db.Decimal(19, 4)
  cutPayment Decimal? @db.Decimal(19, 4)
  task       Task?    @relation(fields: [taskId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  taskId     String
  company    Company? @relation(fields: [companyId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  companyId  Int?
  notes      String?
}

model History {
  id     Int      @id @default(autoincrement())
  editAt DateTime @default(now())
  user   User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
  task   Task     @relation(fields: [taskId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  taskId String
}

model Charge {
  id     Int    @id @default(autoincrement())
  users  User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
  task   Task   @relation(fields: [taskId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  taskId String
}

model Task {
  id           String        @id @db.VarChar(6)
  task_name    String?       @db.VarChar(50)
  p            Int?
  pValue       Decimal?      @db.Decimal(19, 4)
  startDate    DateTime?
  endDate      DateTime?
  openDate     DateTime?
  createAt     DateTime
  companyTypes CompanyType[]
  installments Installment[]
  charges      Charge[]
  history      History[]
  locations    Locations?    @relation(fields: [locationId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  locationId   Int?

  @@unique([task_name])
}
