import type { NextPage } from "next";
import RequestQuoteIcon from "@mui/icons-material/RequestQuote";
import CurrencyYenIcon from "@mui/icons-material/CurrencyYen";
import CurrencyExchangeIcon from "@mui/icons-material/CurrencyExchange";
import {
  BarChart,
  Bar,
  LineChart,
  Line,
  XAxis,
  YAxis,
  CartesianGrid,
  Tooltip,
  Legend,
  ResponsiveContainer,
  PieChart,
  Pie,
  Cell,
} from "recharts";

import Head from "next/head";
import { trpc } from "../utils/trpc";
import { numberWithCommas } from "../utils/tools";
import { Skeleton } from "@mui/material";

const COLORS = ["#78c0ff", "#86f9e4", "#ffe9bb", "#febfa0"];

const RADIAN = Math.PI / 180;
const renderCustomizedLabel = ({
  cx,
  cy,
  midAngle,
  innerRadius,
  outerRadius,
  percent,
}: any) => {
  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;
  const x = cx + radius * Math.cos(-midAngle * RADIAN);
  const y = cy + radius * Math.sin(-midAngle * RADIAN);

  return (
    <text
      x={x}
      y={y}
      fill="white"
      textAnchor={x > cx ? "start" : "end"}
      dominantBaseline="central"
    >
      {`${(percent * 100).toFixed(0)}%`}
    </text>
  );
};

const Home: NextPage = () => {
  const { data, isLoading } = trpc.useQuery(["guest.dashboard"]);

  if (isLoading) {
    return (
      <div className="flex flex-col gap-5 lg:grid grid-cols-3">
        <Skeleton variant="rounded" height={80} />
        <Skeleton variant="rounded" height={80} />
        <Skeleton variant="rounded" height={80} />
        <div className="bgPaper lg:col-span-3 ">
          <Skeleton variant="rounded" height={400} />
        </div>
      </div>
    );
  }
  return (
    <>
      <Head>
        <title>SEMBA | 首頁</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="flex flex-col gap-5 lg:grid grid-cols-3  max-w-7xl xl:mx-auto">
        <div className="bgPaper">
          <h3 className="text-stone-500 ">
            <RequestQuoteIcon /> 成交總金額
          </h3>
          <h2 className="text-emerald-500">$ {numberWithCommas(data?.aSum)}</h2>
        </div>

        <div className="bgPaper">
          <h3 className="text-stone-500">
            <CurrencyYenIcon />
            利潤
          </h3>
          <h2 className="text-red-500">$ {numberWithCommas(data?.pSum)}</h2>
        </div>
        <div className="bgPaper">
          <h3 className="text-stone-500">
            <CurrencyExchangeIcon />
            總支出
          </h3>
          <h2 className="text-pink-500">$ {numberWithCommas(data?.cSum)}</h2>
        </div>
        <div className="bgPaper lg:col-span-3 w-full h-64 md:h-72 lg:h-96">
          <ResponsiveContainer width="100%" height="100%">
            <LineChart
              margin={{
                top: 5,
                right: 30,
                left: 20,
                bottom: 5,
              }}
              width={500}
              height={400}
              data={data?.chartPayload}
            >
              <CartesianGrid strokeDasharray="3 3" />
              <XAxis dataKey="id" />
              <YAxis />
              <Tooltip />
              <Legend />
              <Line
                type="monotone"
                dataKey="total"
                stroke="#8884d8"
                activeDot={{ r: 8 }}
              />
              <Line type="monotone" dataKey="cost" stroke="#82ca9d" />
            </LineChart>
          </ResponsiveContainer>
        </div>

        <div className="bgPaper lg:col-span-1 w-full h-64">
          <h3>個人案件數</h3>
          <ResponsiveContainer width="100%" height="100%">
            <PieChart width={400} height={400}>
              <Pie
                data={data?.utc}
                cy={100}
                labelLine={false}
                label={renderCustomizedLabel}
                outerRadius={80}
                fill="#8884d8"
                dataKey="task"
              >
                {data?.utc.map((v, index) => (
                  <Cell
                    key={`cell-${index}`}
                    fill={COLORS[index % COLORS.length]}
                  />
                ))}
              </Pie>
              <Tooltip />
            </PieChart>
          </ResponsiveContainer>
        </div>

        <div className="bgPaper lg:col-span-2 w-full h-64">
          <ResponsiveContainer width="100%" height="100%">
            <BarChart
              width={500}
              height={300}
              data={data?.userEarn as any}
              margin={{
                top: 5,
                right: 30,
                left: 20,
                bottom: 5,
              }}
            >
              <CartesianGrid strokeDasharray="3 3" />
              <XAxis dataKey="userId" />
              <YAxis />
              <Tooltip />
              <Legend />
              <Bar dataKey="amount" fill="#45cf7a83" />
            </BarChart>
          </ResponsiveContainer>
        </div>
      </div>
    </>
  );
};

export default Home;
